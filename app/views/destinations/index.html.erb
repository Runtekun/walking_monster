<div class="space-y-4 w-full max-w-md mx-auto my-6">
  <input id="address" type="textbox" value="東京駅" 
    class="px-4 py-2 border rounded-lg shadow-md focus:outline-none focus:ring-2 focus:ring-blue-400" placeholder="住所を入力してください" >
  
  <!-- 検索ボタン -->
  <input type="button" value="検索" onclick="codeAddress()" 
    class="px-6 py-2 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400">

      <h2 class="text-lg font-semibold">経路検索</h2>
    
      <!-- 始点 -->
      <input id="start" type="text" placeholder="始点を入力してください"
        class="w-full px-4 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-400">
    
      <!-- 終点 -->
      <input id="end" type="text" placeholder="終点を入力してください"
        class="w-full px-4 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-400">
    
      <!-- ボタン -->
      <button onclick="getRoute()"
        class="w-full px-6 py-2 bg-gray-700 text-white font-semibold rounded-lg shadow-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-400">
        経路を表示
      </button>
</div>

<!-- マップを表示する要素 -->
<div class="w-full h-[600px]" id="map"></div>
<!-- 経路情報表示 -->
<div id="route-info" class="text-center mt-4 text-sm text-gray-700 font-medium"></div>

<script>
let geocoder; 
let map; 
let marker;  

// 地図を初期化する関数
function initMap() {
  const mapOptions = {
    center: { lat: 35.6803997, lng: 139.7690174 }, // 東京駅周辺
    zoom: 10
  };

  // geocoderを初期化
  geocoder = new google.maps.Geocoder(); 

  // mapを初期化
  map = new google.maps.Map(document.getElementById('map'), mapOptions);

  // 初期位置にピンを表示
  marker = new google.maps.Marker({
    position: { lat: 35.6803997, lng: 139.7690174 },
    map: map
  });

  // 経路サービスの初期化
    directionsService = new google.maps.DirectionsService();
    directionsRenderer = new google.maps.DirectionsRenderer({
      map: map
  });

}

// 検索フォームのボタンが押された時に実行される
function codeAddress() {
  let inputAddress = document.getElementById('address').value;

  // geocodeを使って住所を緯度経度に変換
  geocoder.geocode({ 'address': inputAddress }, function(results, status) {
    if (status == 'OK') {
      // 初期ピンを削除
      marker.setMap(null);

      // 検索結果が見つかった場合、地図をその位置に移動
      map.setCenter(results[0].geometry.location);

      // 新しいピンを表示
      marker = new google.maps.Marker({
        map: map,
        position: results[0].geometry.location
      });
    } else {
      // 検索結果が見つからなかった場合
      alert('該当する結果がありませんでした：' + status);
    }
  });
}

  function getRoute() {
    const start = document.getElementById("start").value;
    const end = document.getElementById("end").value;

    const request = {
      origin: start,
      destination: end,
      travelMode: google.maps.TravelMode.WALKING // 徒歩固定
    };

    directionsService.route(request, function(result, status) {
      if (status === "OK") {
        directionsRenderer.setDirections(result);

        // 距離と時間の取得
        const leg = result.routes[0].legs[0];
        const distance = leg.distance.text;
        const duration = leg.duration.text;

        // 距離をメートル単位に変換（"1.5 km" → 1500）
        let distanceMeters = leg.distance.value;  // ← value はメートル単位

        // 歩数を推定
        const steps = Math.round(distanceMeters / 0.7); // 歩数 ≒ 距離（m） ÷ 0.7



        // HTMLに表示
        document.getElementById("route-info").innerHTML = `距離: ${distance}・所要時間: ${duration}・推定歩数: ${steps.toLocaleString()} 歩`;
  
      } else {
        alert("ルート検索に失敗しました: " + status);
      }
    });
  }
</script>

<!-- Google Maps APIを読み込み -->
<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&callback=initMap">
</script>